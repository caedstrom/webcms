# Entrypoint is also needed as image by default set `terraform` binary as an
# entrypoint.
image:
  name: registry.gitlab.com/gitlab-org/terraform-images/releases/0.14:v0.8.0
  entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

# Default output file for Terraform plan
variables:
  PLAN: plan.tfplan
  JSON_PLAN_FILE: tfplan.json
  TF_ROOT: ${CI_PROJECT_DIR}/terraform/infrastructure
  TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/dev

  #Run in an automated fashion without console input
  TF_IN_AUTOMATION=1 
  TF_INPUT=0 
  
  TF_VAR_aws_region: "us-east-1"
  
  # Module-wide variables
  TF_VAR_environment: "preproduction"
  TF_VAR_sites: "[]"
  TF_VAR_tags: "{}"

  # Load balancer variables
  # cf. load_balancer.tf
  TF_VAR_lb_default_certificate: ""
  TF_VAR_lb_extra_certificates: "[]"

  # Database variables
  # cf. rds.tf
  TF_VAR_db_instance_type: ""
  TF_VAR_db_instance_count: 1

  # Search variables
  # cf. search.tf
  TF_VAR_search_instance_type: ""
  TF_VAR_search_instance_count: 1
  TF_VAR_search_instance_storage: 1
  TF_VAR_search_dedicated_node_type: ""
  TF_VAR_search_dedicated_node_count: 0
  TF_VAR_search_availability_zones: 1
  
  # Cache variables
  # cf. cache.tf
  TF_VAR_cache_instance_type: ""
  TF_VAR_cache_instance_count: 1

  


cache:
  key: development
  paths:
    - ${TF_ROOT}/.terraform

before_script:
  - cd ${TF_ROOT}
  - pwd
  - terraform --version
  - terraform init  

stages:
  - validate
  - build
  - test
  - deploy

validate:
  stage: validate
  tags:
    - docker
  script:
    - terraform validate

plan:
  stage: build
  script:
    - terraform plan -out=$PLAN
    - "terraform show --json $PLAN | convert_report > $JSON_PLAN_FILE"
  artifacts:
    paths:
      - $PLAN
    reports:
      terraform: $JSON_PLAN_FILE

# Separate apply job for manual launching Terraform as it can be destructive
# action.
apply:
  stage: deploy
  environment:
    name: production
  script:
    - terraform apply -input=false $PLAN
  dependencies:
    - plan
  when: manual
  only:
    - master
