# This is the Compose file for command-line services.
# Anything that doesn't need to be run as part of the main `docker-compose up'
# command should reside in here and be invoked by a helper script.
version: "3.7"

services:
  # We build a separate Drush container in order to avoid polluting the main web server
  # container with things like an SSH client and rsync, which aren't needed for a
  # container-based deployment.
  drush:
    build: ./services/drush
    entrypoint:
      - /var/www/html/vendor/bin/drush
      - --root=/var/www/html/web
    volumes:
      - ./services/drupal:/var/www/html:cached
      - type: volume
        source: fs-data
        target: /var/www/html/web/sites/default/files

  # AWS cli image set to talk to Minio. `f1 run aws s3 [ARG...]' is the replacement for
  # `aws s3 [ARG...]' with overrides set.
  aws:
    image: xueshanf/awscli
    depends_on:
      - minio
    environment:
      AWS_ACCESS_KEY_ID: minio_access
      AWS_SECRET_ACCESS_KEY: minio_secret
      AWS_DEFAULT_REGION: us-east-1
    entrypoint:
      - aws
      - --endpoint-url=http://minio:9000/

  # This `composer' definition is what enables `f1 composer' to work.
  composer:
    image: composer:2
    volumes:
      - ./services/drupal:/app:cached

  # redis-cli, for connecting to Redis
  redis-cli:
    image: redis:5.0-alpine
    entrypoint:
      - redis-cli
      - -h
      - redis

  # gesso, for building the theme
  gesso:
    build:
      context: ./services/drupal/web/themes/epa_theme
      dockerfile: $PWD/services/drupal/web/themes/epa_theme/Dockerfile
    init: true
    volumes:
      - ./services/drupal/web/themes/epa_theme/images:/app/images:cached
      - ./services/drupal/web/themes/epa_theme/js:/app/js:cached
      - ./services/drupal/web/themes/epa_theme/source:/app/source:cached
      - type: volume
        source: gesso-pattern-lab
        target: /app/pattern-lab
      - type: volume
        source: gesso-css
        target: /app/css

volumes:
  {}
