# This file performs a deployment of the WebCMS to a specific site. It covers both English
# and Spanish, and deploys them in parallel.
#
# The steps executed by this pipeline are as follows:
#
# 1. First, use Kaniko to build this project's Docker images. The images share enough
#    layers that we deem it cheaper to build them all on the same host instead of
#    parallelizing.
# 2. We use a wait step to force Buildkite to pause until the image build completed
#    successfully. If the build failed, then we most likely wouldn't have a full set of
#    images to deploy and thus wouldn't be able to continue safely.
# 3. We use the terraform.apply.yml template to

env:
  WEBCMS_ENVIRONMENT: ${WEBCMS_ENVIRONMENT}
  WEBCMS_SITE: ${WEBCMS_SITE}
  WEBCMS_REPO_URL: ${WEBCMS_REPO_URL}
  WEBCMS_IMAGE_TAG: ${WEBCMS_IMAGE_TAG}

steps:
  - label: ":docker: Build images"
    command: bash .buildkite/build-images.sh

    # Limit Docker builds to one per branch, to avoid overutilizing the Buildkite agent
    # pool.
    concurrency_group: $BUILDKITE_PIPELINE_SLUG/build-$BUILDKITE_BRANCH
    concurrency: 1

    plugins:
      # While Kaniko has native support for authenticating with ECR, it does not have any
      # support for AssumeRole-based credentials. We have to assume the role here, and
      # rely on the build-images.sh script to propagate the authentication variables into
      # the Kaniko container.
      - cultureamp/aws-assume-role#v0.1.0:
          role: arn:aws:iam::316981092358:role/BuildkiteRoleForImageBuilds

  - wait: ~

  - label: ":terraform: WebCMS (${WEBCMS_SITE}-en)"
    command: buildkite-agent pipeline upload .buildkite/terraform.apply.yml

    env:
      WEBCMS_SSM_NAMESPACE: /terraform/${WEBCMS_ENVIRONMENT}/${WEBCMS_SITE}/en
      WEBCMS_TF_MODULE: webcms
      WEBCMS_LANG: en

  - label: ":terraform: WebCMS (${WEBCMS_SITE}-es)"
    command: buildkite-agent pipeline upload .buildkite/terraform.apply.yml

    env:
      WEBCMS_SSM_NAMESPACE: /terraform/${WEBCMS_ENVIRONMENT}/${WEBCMS_SITE}/es
      WEBCMS_TF_MODULE: webcms
      WEBCMS_LANG: es

  - wait: ~

  - label: ":ecs: Drush (${WEBCMS_SITE}-en)"
    plugins:
      - cultureamp/aws-assume-role#v0.1.0:
          role: arn:aws:iam::316981092358:role/BuildkiteRoleForECSTasks

      - docker#v3.8.0:
          image: node:14-alpine
          entrypoint: /bin/sh
          command:
            - -ec
            - |
              cd ci
              npm ci
              node drush.js

          propagate-aws-auth-tokens: true
          environment:
            - AWS_REGION=us-east-2
            - WEBCMS_ENVIRONMENT
            - WEBCMS_SITE
            - WEBCMS_LANG
            - WEBCMS_IMAGE_TAG

    env:
      WEBCMS_LANG: en

  - label: ":ecs: Drush (${WEBCMS_SITE}-es)"
    plugins:
      - cultureamp/aws-assume-role#v0.1.0:
          role: arn:aws:iam::316981092358:role/BuildkiteRoleForECSTasks

      - docker#v3.8.0:
          image: node:14-alpine
          entrypoint: /bin/sh
          command:
            - -ec
            - |
              cd ci
              npm ci
              node drush.js

          propagate-aws-auth-tokens: true
          environment:
            - AWS_REGION=us-east-2
            - WEBCMS_ENVIRONMENT
            - WEBCMS_SITE
            - WEBCMS_LANG
            - WEBCMS_IMAGE_TAG

    env:
      WEBCMS_LANG: es
